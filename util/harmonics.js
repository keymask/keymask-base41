const maxHarmonic = 8;

const tests = [
  {
    modulus: 23,
    params: [
      [5, 14],
      [7, 10],
      [11, 21],
      [15, 20],
      [17, 19]
    ]
  },
  {
    modulus: 509,
    params: [
      [35, 160],
      [110, 236],
      [273, 399],
      [349, 474]
    ]
  },
  {
    modulus: 8191,
    params: [
      [884, 7459],
      [1716, 5580],
      [2685, 6083]
    ]
  },
  {
    modulus: 262139,
    params: [
      [92717, 166972],
      [21876, 118068]
    ]
  },
  {
    modulus: 4194301,
    params: [
      [914334, 1406151],
      [2788150, 3279967],
      [1731287, 2040406],
      [2463014, 2153895]
    ]
  },
  {
    modulus: 134217689,
    params: [
      [45576512, 70391260],
      [63826429, 88641177],
      [3162696, 71543207]
    ]
  },
  // 2^32-5
  {
    modulus: 68719476731,
    params: [
      [49865143810, 44525253482],
      [45453986995, 40162435147]
    ]
  },
  {
    modulus: 2199023255531,
    params: [
      [140245111714, 1888116500887],
      [416480024109, 1420814698317],
      [1319743354064, 717943173063]
    ]
  },
  {
    modulus: 35184372088777,
    params: [
      [25933916233908, 3608903742640],
      [18586042069168, 11850386302026],
      [20827157855185, 5870357204989]
    ]
  },
  {
    modulus: 1125899906842597,
    params: [
      [1087141320185010, 1051122009542795],
      [157252724901243, 422705992136651],
      [791038363307311, 605985299432352]
    ]
  },
  {
    modulus: 36028797018963913n,
    params: [
      [33266544676670489n, 11719476530693442n],
      [19708881949174686n, 32182684885571630n],
      [32075972421209701n, 15995561023396933n]
    ]
  },
  {
    modulus: 576460752303423433n,
    params: [
      [346764851511064641n, 287514719519235431n],
      [124795884580648576n, 526457461907464601n],
      [573223409952553925n, 81222304453481810n]
    ]
  }
];

// const tests = [
//   {
//     modulus: 41,
//     params: [
//       [6, 7],
//       [22, 28],
//       [26, 30]
//     ]
//   },
//   {
//     modulus: 1021,
//     params: [
//       [65, 377],
//       [644, 956]
//     ]
//   },
//   {
//     modulus: 65521,
//     params: [
//       [17364, 32236],
//       [33285, 48157],
//       [2469, 47104]
//     ]
//   },
//   {
//     modulus: 2097143,
//     params: [
//       [360889, 1372180],
//       [1043187, 1352851],
//       [1939807, 1969917]
//     ]
//   },
//   {
//     modulus: 67108859,
//     params: [
//       [26590841, 11526618],
//       [19552116, 24409594],
//       [66117721, 6763103]
//     ]
//   },
//   {
//     modulus: 4294967291,
//     params: [
//       [1588635695, 3870709308],
//       [1223106847, 4223879656],
//       [279470273, 1815976680]
//     ]
//   },
//   {
//     modulus: 137438953447,
//     params: [
//       [76886758244, 31450092817],
//       [2996735870, 105638438130],
//       [85876534675, 116895888786]
//     ]
//   },
//   {
//     modulus: 4398046511093,
//     params: [
//       [2214813540776, 4365946432566],
//       [2928603677866, 3015630915308],
//       [92644101553, 626031856758]
//     ]
//   },
//   {
//     modulus: 281474976710597,
//     params: [
//       [49235258628958, 253087341916107],
//       [51699608632694, 8419150949545],
//       [59279420901007, 163724808306782]
//     ]
//   },
//   {
//     modulus: 9007199254740881,
//     params: [
//       [2082839274626558, 3141627116318043],
//       [4179081713689027, 1169831480608704],
//       [5667072534355537, 7982986707690649]
//     ]
//   },
//   {
//     modulus: 288230376151711717n,
//     params: [
//       [101565695086122187n, 56502943171806276n],
//       [163847936876980536n, 256462492811829427n],
//       [206638310974457555n, 28146528635210647n]
//     ]
//   },
//   {
//     modulus: 18446744073709551557n,
//     params: [
//       [13891176665706064842n, 9044836419713972268n],
//       [2227057010910366687n, 17412224886468018797n],
//       [18263440312458789471n, 811465980874026894n]
//     ]
//   }
// ];

let a, b;
tests.forEach((test) => {
  const bigint = typeof test.modulus === "bigint";
  let max = 0;
  let best;
  test.params.forEach((param) => {
    let score = 0;
    if (bigint) {
      a = Number(param[0] * 1000000n / test.modulus) / 1000000;
      b = Number(param[1] * 1000000n / test.modulus) / 1000000;
    } else {
      a = param[0] / test.modulus;
      b = param[1] / test.modulus;
    }
    for (let i = 1; i <= maxHarmonic; i++) {
      let mina = a;
      let minb = b;
      for (let j = 1; j <= i; j++) {
        mina = Math.min(mina, Math.abs(j / i - a));
        minb = Math.min(minb, Math.abs(j / i - b));
      }
      score += mina + minb;
    }
    if (!bigint) {
      score = score.toFixed(9);
    }
    if (score > max) {
      max = score;
      best = param;
    }
    // console.log(test.modulus);
    // console.log(param);
    // console.log(score);
    // console.log("");
  });
  console.log(test.modulus);
  console.log(best);
  console.log("");
});